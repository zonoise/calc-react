{"version":3,"sources":["components/Navigation.js","components/About.js","components/NumberButton.js","actionTypes.js","actions/calc.js","containers/NumberButton.js","components/PlusButton.js","containers/PlusButton.js","components/EqualButton.js","containers/EqualButton.js","components/Display.js","containers/Display.js","components/CalcMain.js","App.js","serviceWorker.js","reducers/calc.js","index.js"],"names":["Navigation","react_default","a","createElement","className","Link","to","React","Component","About","components_Navigation","NumberButton","_ref","number","inputNumber","Button_default","style","height","width","variant","onClick","INPUT_NUMBER","INPUT_PLUS","INPUT_EQUAL","console","log","type","payload","input_number","inputPlus","inputEqual","connect","dispatch","PlusButton","EqualButton","Display","display","Paper_default","padding","margin","color","CalcMain","buttonGridStyle","Fragment","CssBaseline_default","AppBar_default","position","Toolbar_default","Typography_default","backgroundColor","Grid_default","container","item","xs","containers_Display","alignItems","map","key","containers_NumberButton","containers_PlusButton","containers_EqualButton","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","initialState","text","currentAction","currentOperatior","tmp","store","createStore","state","arguments","length","undefined","action","Object","objectSpread","onInputNumber","onInputPlus","onInputEqual","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bdce056.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport React from 'react';\n\nclass Navigation extends React.Component {\n    render() {\n        return (\n            < div className=\"Navigation\" >\n                <Link to=\"/\">home</Link>\n                <Link to=\"/about\">about</Link>\n            </div >\n        );\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport Navigation from './Navigation';\n\n\nconst About = () => (\n    <div className=\"App\">\n        <Navigation />\n    </div>\n)\n\nexport default About;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nfunction NumberButton({ number, inputNumber }) {\n\n    const style = {\n        height: \"60px\",\n        width: \"60px\"\n    }\n    return (\n        <Button style={style} variant=\"outlined\" onClick={() => inputNumber(number)}>\n            {number}\n        </ Button>\n    );\n\n};\n\nNumberButton.propTypes = {\n    number: PropTypes.number\n}\n\nexport default NumberButton;","export const INPUT_NUMBER = 'INPUT_NUMBER';\nexport const INPUT_PLUS = 'INPUT_PLUS';\nexport const INPUT_EQUAL = 'INPUT_EQUAL';\n","import { INPUT_NUMBER, INPUT_PLUS, INPUT_EQUAL } from '../actionTypes';\n\nexport const inputNumber = (number) => {\n    console.log(number);\n    console.log(INPUT_NUMBER);\n\n    return {\n        type: INPUT_NUMBER,\n        payload: {\n            input_number: number\n        }\n    }\n};\n\nexport const inputPlus = () => {\n    console.log(INPUT_PLUS);\n\n    return {\n        type: INPUT_PLUS\n    }\n};\n\nexport const inputEqual = () => {\n    console.log(INPUT_EQUAL);\n\n    return {\n        type: INPUT_EQUAL\n    }\n};\n","import NumberButton from '../components/NumberButton';\nimport { connect } from 'react-redux';\nimport { inputNumber } from '../actions/calc'\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        inputNumber(number) {\n            dispatch(inputNumber(number))\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(NumberButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nfunction PlusButton({ inputPlus }) {\n\n    return (\n        <Button variant=\"outlined\" onClick={() => inputPlus()}>\n            +\n        </Button>\n    );\n\n}\n\nexport default PlusButton;","import PlusButton from '../components/PlusButton';\nimport { connect } from 'react-redux';\nimport { inputPlus } from '../actions/calc'\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        inputPlus() {\n            dispatch(inputPlus())\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(PlusButton);","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nfunction EqualButton({ inputEqual }) {\n\n    return (\n        <Button variant=\"outlined\" className=\"EqualButton\" onClick={() => inputEqual()}>\n            =\n        </Button>\n    );\n\n}\n\nexport default EqualButton;","import EqualButton from '../components/EqualButton';\nimport { connect } from 'react-redux';\nimport { inputEqual } from '../actions/calc'\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        inputEqual() {\n            dispatch(inputEqual())\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(EqualButton);","import React from 'react';\nimport Typography from '@material-ui/core/Paper';\n\nfunction Display({ display }) {\n\n    const style = {\n        padding: \"10px\",\n        margin: \"10px 0\"\n    };\n\n    return (\n        <Typography style={style} variant=\"display4\" color=\"inherit\" className=\"Display\">\n            {display}\n        </Typography>\n    );\n}\n\nexport default Display;","import Display from '../components/Display';\nimport { connect } from 'react-redux';\n\n\nfunction mapStateToProps({ display }) {\n    return { display }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);","import React, { Component } from 'react';\nimport Navigation from './Navigation';\n\nimport NumberButton from '../containers/NumberButton';\nimport PlusButton from '../containers/PlusButton';\nimport EqualButton from '../containers/EqualButton';\nimport Display from '../containers/Display';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nexport default class CalcMain extends Component {\n    render() {\n\n        const calcGridStyle = {\n            margin: \"auto\",\n            width: \"500px\",\n            padding: \"10px\",\n            backgroundColor: \"red\"\n\n        };\n\n        const buttonGridStyle = {\n            // boder: \"1px solid black\",\n            padding: \"10px 0\",\n            margin: 0\n        };\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <AppBar position=\"static\" >\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">\n                            Calc\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Paper style={calcGridStyle}>\n                    <Grid container className=\"Calc\">\n                        <Navigation />\n                        <Grid item xs={12}>\n                            <Display />\n                        </Grid>\n\n                        <Grid item alignItems=\"center\" xs={9} container>\n                            {[7, 8, 9, 4, 5, 6, 1, 2, 3, 0].map(number => (\n                                <Grid key={number} style={buttonGridStyle} item xs={4}>\n                                    <NumberButton number={number} />\n                                </Grid>\n                            ))}\n                        </Grid>\n\n                        <Grid item xs={3} container alignItems=\"baseline\">\n                            <Grid item xs={12}><PlusButton /></Grid>\n                            <Grid item xs={12}><EqualButton /></Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </React.Fragment >\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport About from './components/About';\nimport CalcMain from './components/CalcMain';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nconst App = () => (\n  <BrowserRouter>\n    <div>\n      <Route exact path='/' component={CalcMain} />\n      <Route path='/about' component={About} />\n    </div>\n  </BrowserRouter>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { INPUT_NUMBER, INPUT_PLUS, INPUT_EQUAL } from '../actionTypes';\n\nconst initialState = {\n    text: \"\",\n    display: 0,\n    currentAction: INPUT_NUMBER,\n    currentOperatior: null,\n    tmp: 0,\n};\n\nfunction onInputNumber(state, inputNumber) {\n    if (state.currentAction === INPUT_PLUS) {\n        return {\n            ...state,\n            currentAction: INPUT_NUMBER,\n            display: inputNumber\n        }\n    }\n\n    return {\n        ...state,\n        currentAction: INPUT_NUMBER,\n        display: state.display * 10 + inputNumber\n    }\n}\n\nfunction onInputPlus(state) {\n    switch (state.currentAction) {\n        case INPUT_NUMBER:\n            return {\n                ...state,\n                currentAction: INPUT_PLUS,\n                currentOperatior: INPUT_PLUS,\n                tmp: state.display + state.tmp,\n                display: state.display + state.tmp,\n            };\n        default:\n            return state;\n    }\n\n}\n\nfunction onInputEqual(state) {\n\n    switch (state.currentAction) {\n        case INPUT_NUMBER:\n            var display = 0;\n            switch (state.currentOperatior) {\n                case INPUT_PLUS:\n                    display = state.tmp + state.display;\n                    break;\n                default:\n            }\n\n            return {\n                ...state,\n                display: display,\n                tmp: 0,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default function calcReducer(state = initialState, action) {\n    switch (action.type) {\n        case INPUT_NUMBER:\n            return onInputNumber(state, action.payload.input_number)\n        case INPUT_PLUS:\n            return onInputPlus(state)\n        case INPUT_EQUAL:\n            return onInputEqual(state)\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport calcReducer from './reducers/calc';\nconst store = createStore(\n    calcReducer\n);\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}